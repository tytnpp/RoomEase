<div class="max-w-3xl mx-auto">
  <div class="mb-6">
    <%= link_to room_path(@room), class: "inline-flex items-center text-sm font-medium text-indigo-600 hover:text-indigo-500" do %>
      <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-1" viewBox="0 0 20 20" fill="currentColor">
        <path fill-rule="evenodd" d="M9.707 16.707a1 1 0 01-1.414 0l-6-6a1 1 0 010-1.414l6-6a1 1 0 011.414 1.414L5.414 9H17a1 1 0 110 2H5.414l4.293 4.293a1 1 0 010 1.414z" clip-rule="evenodd" />
      </svg>
      Back to room details
    <% end %>
  </div>

  <div class="bg-white rounded-xl shadow-md overflow-hidden">
    <div class="px-6 py-4 bg-indigo-50 border-b border-indigo-100">
      <h1 class="text-xl font-semibold text-gray-900">Reserve <%= @room.name %></h1>
    </div>

    <div class="p-6">
      <!-- Room Summary -->
      <div class="flex items-start mb-6 pb-6 border-b border-gray-200">
        <div class="flex-shrink-0 h-12 w-12 rounded-md bg-indigo-100 flex items-center justify-center text-indigo-500">
          <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 21V5a2 2 0 00-2-2H7a2 2 0 00-2 2v16m14 0h2m-2 0h-5m-9 0H3m2 0h5M9 7h1m-1 4h1m4-4h1m-1 4h1m-5 10v-5a1 1 0 011-1h2a1 1 0 011 1v5m-4 0h4" />
          </svg>
        </div>
        <div class="ml-4">
          <h2 class="text-lg font-medium text-gray-900"><%= @room.name %></h2>
          <div class="mt-1 flex items-center">
            <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 text-gray-400" fill="none" viewBox="0 0 24 24" stroke="currentColor">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 20h5v-2a3 3 0 00-5.356-1.857M17 20H7m10 0v-2c0-.656-.126-1.283-.356-1.857M7 20H2v-2a3 3 0 015.356-1.857M7 20v-2c0-.656.126-1.283.356-1.857m0 0a5.002 5.002 0 019.288 0M15 7a3 3 0 11-6 0 3 3 0 016 0zm6 3a2 2 0 11-4 0 2 2 0 014 0zM7 10a2 2 0 11-4 0 2 2 0 014 0z" />
            </svg>
            <span class="ml-2 text-sm text-gray-500">Capacity: <%= @room.capacity %> people</span>
          </div>
        </div>
      </div>



      <!-- Reservation Form -->
      <%= form_with(model: [@room, @reservation], local: true, class: "space-y-6") do |f| %>

        <!-- Date Display -->
        <div>
            <label class="block text-sm font-medium text-gray-900">Reservation Date</label>
            <div class="mt-1">
                <p class="text-base text-gray-500"><%= Date.today.strftime('%A, %B %d, %Y') %></p>
            </div>
        </div>
        <!-- Time Selection -->
        <div class="grid grid-cols-1 gap-y-6 gap-x-4 sm:grid-cols-2">
          <div>
            <%= f.label :start_time, "Start Time", class: "block text-sm font-medium text-gray-900" %>
            <div class="mt-1">
              <%= f.select :start_time, 
                    options_for_select((9..17).map { |hour| ["#{hour}:00", Time.zone.now.change(hour: hour, min: 0)] }),
                    {}, 
                    { class: "mt-1 block w-full pl-3 pr-10 py-2 text-base border-gray-300 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm rounded-md" } %>
            </div>
          </div>

          <div>
            <%= f.label :end_time, "End Time", class: "block text-sm font-medium text-gray-900" %>
            <div class="mt-1">
              <%= f.select :end_time, 
                    options_for_select((10..18).map { |hour| ["#{hour}:00", Time.zone.now.change(hour: hour, min: 0)] }),
                    {}, 
                    { class: "mt-1 block w-full pl-3 pr-10 py-2 text-base border-gray-300 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm rounded-md" } %>
            </div>
          </div>
        </div>

        <!-- Notes (Optional) -->
        <% if @reservation.respond_to?(:notes) %>
          <div>
            <%= f.label :notes, "Notes (Optional)", class: "block text-sm font-medium text-gray-700" %>
            <div class="mt-1">
              <%= f.text_area :notes, rows: 3, class: "shadow-sm focus:ring-indigo-500 focus:border-indigo-500 block w-full sm:text-sm border-gray-300 rounded-md", placeholder: "Add any special requirements or notes for this reservation" %>
            </div>
            <p class="mt-2 text-sm text-gray-500">Brief description of your meeting or any special requirements.</p>
          </div>
        <% end %>

        <!-- Terms and Conditions -->
        <div class="relative flex items-start">
          <div class="flex items-center h-5">
            <input id="terms" name="terms" type="checkbox" class="focus:ring-indigo-500 h-4 w-4 text-indigo-600 border-gray-300 rounded">
          </div>
          <div class="ml-3 text-sm">
            <label for="terms" class="font-medium text-gray-700">I agree to the terms and conditions</label>
            <p class="text-gray-500">I understand that I must cancel my reservation at least 1 hour in advance if I cannot attend.</p>
          </div>
        </div>

        <!-- Submit Button -->
        <div class="flex justify-end">
          <%= f.submit "Reserve Room", class: "inline-flex justify-center py-2 px-4 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500" %>
        </div>
      <% end %>
    </div>
  </div>

  <!-- Available Time Slots (Optional) -->
  <% if @available_slots && @available_slots.any? %>
    <div class="mt-8 bg-white rounded-xl shadow-md overflow-hidden">
      <div class="px-6 py-4 bg-gray-50 border-b border-gray-200">
        <h2 class="text-lg font-semibold text-gray-900">Available Time Slots Today</h2>
      </div>
      <div class="p-6">
        <div class="grid grid-cols-2 sm:grid-cols-3 md:grid-cols-4 gap-3">
          <% @available_slots.each do |slot| %>
            <div class="bg-green-50 border border-green-200 rounded-md px-3 py-2 text-sm text-green-800 text-center">
              <%= slot[:start_time].strftime("%H:%M") %> - <%= slot[:end_time].strftime("%H:%M") %>
            </div>
          <% end %>
        </div>
      </div>
    </div>
  <% end %>
</div>

<!-- Modal for Validation Errors -->
<div id="errorModal" class="modal hidden fixed inset-0 z-50 overflow-y-auto" aria-labelledby="modal-title" role="dialog" aria-modal="true">
  <div class="flex items-end justify-center min-h-screen pt-4 px-4 pb-20 text-center sm:block sm:p-0">
    <!-- Background overlay -->
    <div class="fixed inset-0 bg-gray-500 bg-opacity-75 transition-opacity" aria-hidden="true"></div>

    <!-- Modal panel -->
    <div class="inline-block align-bottom bg-white rounded-lg text-left overflow-hidden shadow-xl transform transition-all sm:my-8 sm:align-middle sm:max-w-lg sm:w-full">
      <div class="bg-white px-4 pt-5 pb-4 sm:p-6 sm:pb-4">
        <div class="sm:flex sm:items-start">
          <div class="mx-auto flex-shrink-0 flex items-center justify-center h-12 w-12 rounded-full bg-red-100 sm:mx-0 sm:h-10 sm:w-10">
            <svg class="h-6 w-6 text-red-600" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor" aria-hidden="true">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z" />
            </svg>
          </div>
          <div class="mt-3 text-center sm:mt-0 sm:ml-4 sm:text-left">
            <h3 class="text-lg leading-6 font-medium text-gray-900" id="modal-title">
              Reservation Error
            </h3>
            <div class="mt-2">
              <ul id="errorMessages" class="text-sm text-red-600 list-disc pl-5 space-y-1">
                <% @reservation.errors.full_messages.each do |message| %>
                  <span><%= message %></span>
                <% end %>
              </ul>
            </div>
          </div>
        </div>
      </div>

      <div class="bg-gray-50 px-4 py-3 sm:px-6 sm:flex sm:flex-row-reverse">
        <button type="button" onclick="closeModal()" class="w-full inline-flex justify-center rounded-md border border-transparent shadow-sm px-4 py-2 bg-red-600 text-base font-medium text-white hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-red-500 sm:ml-3 sm:w-auto sm:text-sm">
          Close
        </button>
      </div>
    </div>
  </div>
</div>

<script>
  // Show the modal if there are errors
  document.addEventListener("DOMContentLoaded", () => {
    const errorModal = document.getElementById("errorModal");
    const hasErrors = <%= @reservation.errors.any? ? 'true' : 'false' %>;

    if (hasErrors) {
      errorModal.classList.remove("hidden");
    }
    
    // Time validation
    const startTimeSelect = document.querySelector('select[name="reservation[start_time]"]');
    const endTimeSelect = document.querySelector('select[name="reservation[end_time]"]');
    
    if (startTimeSelect && endTimeSelect) {
      startTimeSelect.addEventListener('change', function() {
        const startHour = parseInt(this.options[this.selectedIndex].text);
        
        // Clear end time options
        while (endTimeSelect.options.length > 0) {
          endTimeSelect.remove(0);
        }
        
        // Add new options starting from startHour + 1
        for (let hour = startHour + 1; hour <= 18; hour++) {
          const option = document.createElement('option');
          option.text = `${hour}:00`;
          option.value = new Date().setHours(hour, 0, 0, 0);
          endTimeSelect.add(option);
        }
      });
    }
  });

  document.addEventListener("DOMContentLoaded", () => {
    const startTimeSelect = document.querySelector('select[name="reservation[start_time]"]');
    const errorMessages = document.getElementById("errorMessages");

    startTimeSelect.addEventListener('change', function() {
        const selectedStartTime = new Date(this.value);
        const now = new Date();

        // ถ้าเวลาที่เลือกเป็นอดีต
        if (selectedStartTime < now) {
        errorMessages.innerHTML = "<li>Start time cannot be in the past.</li>";
        document.getElementById("errorModal").classList.remove("hidden");
        } else {
        errorMessages.innerHTML = "";
        document.getElementById("errorModal").classList.add("hidden");
        }
      });
    });

  // Close the modal
  function closeModal() {
    const errorModal = document.getElementById("errorModal");
    errorModal.classList.add("hidden");
  }
</script>